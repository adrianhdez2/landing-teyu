---

---

<section
    class="max-w-5xl mx-auto px-3 lg:px-0 pt-10 flex flex-col md:flex-row items-center justify-between"
>
    <div class="w-full md:w-1/2 h-auto space-y-10">
        <div class="w-full h-14">
            <span id="typing" class="text-4xl md:text-5xl"></span>
        </div>
        <p class="text-2xl md:text-3xl">
            Desarrollando software a medida para el cliente
        </p>
        <p class="text-base font-normal">
            Somos un grupo de desarrolladores 100% originarios de la Chontalpa,
            nuestro nombre proviene proviene de “tey”, palabra chontal que hace
            referencia a algo valioso o significativo. Siendo el cliente nuestra
            prioridad, creando soluciones que importen y perduren.
        </p>
    </div>
    <div class="w-full md:w-1/2 flex items-center justify-center mt-2 md:mt-0">
        <img
            src="/img/hero-image.webp"
            alt=""
            width="450"
            height="450"
            class="aspect-square w-auto h-auto"
            loading="lazy"
        />
    </div>
</section>

<script is:inline defer>
    var AutoTyping = (function (e) {
        var t = {};
        function r(n) {
            if (t[n]) return t[n].exports;
            var i = (t[n] = { i: n, l: !1, exports: {} });
            return e[n].call(i.exports, i, i.exports, r), (i.l = !0), i.exports;
        }
        return (
            (r.m = e),
            (r.c = t),
            (r.d = function (e, t, n) {
                r.o(e, t) ||
                    Object.defineProperty(e, t, { enumerable: !0, get: n });
            }),
            (r.r = function (e) {
                "undefined" != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module",
                    }),
                    Object.defineProperty(e, "__esModule", { value: !0 });
            }),
            (r.t = function (e, t) {
                if ((1 & t && (e = r(e)), 8 & t)) return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                    return e;
                var n = Object.create(null);
                if (
                    (r.r(n),
                    Object.defineProperty(n, "default", {
                        enumerable: !0,
                        value: e,
                    }),
                    2 & t && "string" != typeof e)
                )
                    for (var i in e)
                        r.d(
                            n,
                            i,
                            function (t) {
                                return e[t];
                            }.bind(null, i),
                        );
                return n;
            }),
            (r.n = function (e) {
                var t =
                    e && e.__esModule
                        ? function () {
                              return e.default;
                          }
                        : function () {
                              return e;
                          };
                return r.d(t, "a", t), t;
            }),
            (r.o = function (e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (r.p = ""),
            r((r.s = 0))
        );
    })([
        function (e, t, r) {
            "use strict";
            r.r(t);
            t.default = class {
                constructor(
                    e,
                    t,
                    {
                        typeSpeed: r = 150,
                        deleteSpeed: n = 150,
                        waitBeforeDelete: i = 1e3,
                        waitBetweenWords: o = 1e3,
                        writeWhole: l = !1,
                    } = {},
                ) {
                    (this.selector = e),
                        (this.text = t),
                        (this.typeSpeed = r),
                        (this.deleteSpeed = n),
                        (this.waitBeforeDelete = i),
                        (this.waitBetweenWords = o),
                        (this.writeWhole = l),
                        (this.el = document.querySelector(e));
                }
                async start() {
                    this.el;
                    for (let e = 0; e < this.text.length; e++) {
                        const t = this.text[e];
                        let r = t.split("");
                        this.writeWhole && (r = [t]),
                            await this.writeText(r),
                            e == this.text.length - 1 && (e = -1);
                    }
                }
                writeText(e) {
                    let t = this;
                    return new Promise((r) => {
                        const n = this.el;
                        let i = !1,
                            o = setInterval(() => {
                                let l = e.shift();
                                i && ((i = !1), (l = " " + l)),
                                    (i = " " == l),
                                    (n.innerText += l),
                                    0 == e.length &&
                                        (clearInterval(o),
                                        setTimeout(() => {
                                            let e = setInterval(() => {
                                                const i = n.innerText;
                                                t.writeWhole
                                                    ? (n.innerText = "")
                                                    : (n.innerText = i.substr(
                                                          0,
                                                          i.length - 1,
                                                      )),
                                                    0 == n.innerText.length &&
                                                        (clearInterval(e),
                                                        setTimeout(
                                                            () => r(),
                                                            this
                                                                .waitBetweenWords,
                                                        ));
                                            }, this.deleteSpeed);
                                        }, this.waitBeforeDelete));
                            }, this.typeSpeed);
                    });
                }
            };
        },
    ]).default;

    const exampleText = ["<teyu/>"];
    const exampleTyping = new AutoTyping("#typing", exampleText, {
        typeSpeed: 200,
        deleteSpeed: 50, // Velocidad de borrado más rápida
        waitBeforeDelete: 1500, // Ajusta el tiempo de espera antes de borrar
        waitBetweenWords: 700, // Pequeña pausa entre palabras para mejorar la fluidez
    });
    exampleTyping.start();
</script>
